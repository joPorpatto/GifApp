{"version":3,"sources":["components/AddCategory.js","helpers/getGifs.js","components/GifGridItem.js","components/GifGrid.js","hooks/useFetchGifs.js","GifExpertApp.js","index.js"],"names":["AddCategory","setCategories","useState","inputValue","setInputValue","onSubmit","e","preventDefault","trim","length","cats","placeholder","type","value","onChange","target","getGifs","category","a","url","encodeURI","fetch","resp","json","data","gifs","map","img","id","title","images","downsized_medium","GifGridItem","className","src","alt","GifGrid","loading","state","setState","useEffect","then","imgs","useFetchGifs","GifExpertApp","categories","ReactDOM","render","document","getElementById"],"mappings":"mMAGaA,EAAc,SAAC,GAAuB,IAArBC,EAAoB,EAApBA,cAE1B,EAAoCC,mBAAS,IAA7C,mBAAOC,EAAP,KAAmBC,EAAnB,KAgBA,OAEI,sBAAMC,SAZW,SAACC,GAClBA,EAAEC,iBAEGJ,EAAWK,OAAOC,OAAS,IAC5BR,GAAe,SAAAS,GAAI,OAAMP,GAAN,mBAAqBO,OACxCN,EAAc,MAOlB,SACI,uBACIO,YAAY,SACZC,KAAK,OACLC,MAAQV,EACRW,SArBc,SAAER,GACxBF,EAAeE,EAAES,OAAOF,a,+BCDfG,EAAO,uCAAG,WAAMC,GAAN,uBAAAC,EAAA,6DAEbC,EAFa,iDAEoCC,UAAUH,GAF9C,+DAICI,MAAMF,GAJP,cAIbG,EAJa,gBAKEA,EAAKC,OALP,uBAKZC,EALY,EAKZA,KAEDC,EAAOD,EAAKE,KAAK,SAAAC,GAAQ,IAAD,EAC1B,MAAM,CACFC,GAAID,EAAIC,GACRC,MAAMF,EAAIE,MACVV,IAAG,UAAEQ,EAAIG,cAAN,aAAE,EAAYC,iBAAiBZ,QAXvB,kBAeZM,GAfY,4CAAH,sDCLXO,EAAc,SAAC,GAAoB,IAAlBH,EAAiB,EAAjBA,MAAOV,EAAU,EAAVA,IAIjC,OACI,sBAAKc,UAAU,0CAAf,UACI,qBAAKC,IAAMf,EAAMgB,IAAMN,IACvB,kCAAMA,EAAN,WCACO,EAAU,SAAC,GAAkB,IAAhBnB,EAAe,EAAfA,SAEtB,ECJwB,SAAEA,GAE1B,MAA0Bf,mBAAS,CAC/BsB,KAAM,GACNa,SAAS,IAFb,mBAAOC,EAAP,KAAcC,EAAd,KA0BA,OApBAC,qBAAU,WAENxB,EAASC,GACJwB,MAAK,SAAAC,GAGEH,EAAS,CACLf,KAAMkB,EACNL,SAAS,SAQtB,CAACpB,IAIDqB,EDxBwBK,CAAc1B,GAAhCa,EAAb,EAAON,KAAaa,EAApB,EAAoBA,QAEpB,OACI,qCAEA,uCAAWpB,EAAX,YAEA,sBAAKgB,UAAU,YAAf,UAKCI,GAAW,mBAAGJ,UAAU,oCAAb,qBAGJ,oBAAIA,UAAU,OAAd,SAEQH,EAAOJ,KAAK,SAAAC,GAAG,OACX,cAAC,EAAD,eAEQA,GADCA,EAAIC,gBE1B5BgB,EAAe,WAExB,MAAoC1C,mBAAS,CAAC,aAA9C,mBAAO2C,EAAP,KAAmB5C,EAAnB,KAEA,OACI,qCACI,8CAKA,cAAC,EAAD,CAAaA,cAAgBA,IACzB,uBAEA,6BAEJ4C,EAAWnB,KAAK,SAAAT,GAAQ,OACpB,cAAC,EAAD,CAEIA,SAAWA,GADLA,Y,MCf1B6B,IAASC,OAEP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.da17ae86.chunk.js","sourcesContent":["import React, { useState } from 'react'\nimport PropTypes from 'prop-types';\n\nexport const AddCategory = ({ setCategories }) => {\n\n    const [inputValue, setInputValue] = useState(''); // ''\n\n    const handleInputChange = ( e ) => {\n        setInputValue( e.target.value );\n    }\n\n    const handleSubmit = (e) => {\n        e.preventDefault();\n\n        if ( inputValue.trim().length > 2 ) {\n            setCategories( cats => [ inputValue, ...cats, ] );\n            setInputValue('');\n        }\n\n    }\n\n    return (\n        \n        <form onSubmit={ handleSubmit }>\n            <input \n                placeholder=\"Search\"\n                type=\"text\"\n                value={ inputValue }\n                onChange={ handleInputChange }\n            />\n        </form>\n    )\n}\n\n\nAddCategory.propTypes = {\n    setCategories: PropTypes.func.isRequired\n}\n","\r\n\r\n\r\n\r\n\r\n\r\n    \r\n    export const getGifs = async(category) => {\r\n        \r\n        const url = `https://api.giphy.com/v1/gifs/search?q=${ encodeURI(category) }&limit=10&api_key=8P66CiS1Aqn3BkRK02A2XRNfYUa2OcHw`\r\n    \r\n        const resp =  await fetch(url);\r\n        const {data} = await resp.json();\r\n\r\n        const gifs = data.map( img => {\r\n            return{\r\n                id: img.id,\r\n                title:img.title,\r\n                url: img.images?.downsized_medium.url\r\n            }\r\n        })\r\n\r\n        return gifs;\r\n        \r\n    }\r\n    ","import React from 'react'\n\nexport const GifGridItem = ({ title, url }) => {\n\n\n\n    return (\n        <div className=\"card animate__animated animate__bounce \">\n            <img src={ url } alt={ title } />\n            <p> { title } </p>\n        </div>\n    )\n}\n","\nimport React  from 'react';\nimport { useFetchGifs } from '../hooks/useFetchGifs';\nimport { GifGridItem } from './GifGridItem';\n//import { getGifs } from '../helpers/getGifs';\n//const { data:images, loading } = useFetchGifs( category );\n//import { useFetchGifs } from '../hooks/useFetchGifs';\n\n\nexport const GifGrid = ({ category }) => {\n\n    const {data: images,loading} = useFetchGifs( category);\n\n    return (\n        <>\n\n        <h3>     { category}      </h3>  \n\n        <div className=\"card-grid\">              \n\n\n        \n\n        {loading && <p className=\"animate__animated animate__wobble\">Loading</p >}\n\n             \n                <ol className=\"olis\">\n                    {\n                        images.map( img => (\n                            <GifGridItem \n                                key={img.id}\n                                {...img }/>\n                                //img={img}/>\n\n                        ))\n                    }\n                </ol> \n\n                \n       </div>\n       </>\n    )\n}\n","import { useEffect, useState } from \"react\"\r\nimport { getGifs } from \"../helpers/getGifs\";\r\n\r\n\r\n\r\n\r\n\r\nexport const useFetchGifs = ( category) => {\r\n\r\n    const [state, setState] = useState({\r\n        data: [],\r\n        loading: true\r\n    });\r\n\r\n    \r\n    useEffect(() => {\r\n\r\n        getGifs( category )\r\n            .then(imgs => {\r\n\r\n                \r\n                    setState({\r\n                        data: imgs,\r\n                        loading: false\r\n                    })\r\n             \r\n               \r\n            })\r\n\r\n            \r\n\r\n        }, [category])\r\n\r\n\r\n\r\n    return state;\r\n\r\n}","import React, { useState } from 'react'\nimport { AddCategory } from './components/AddCategory';\nimport { GifGrid } from './components/GifGrid';\n\nexport const GifExpertApp = () => {\n    \n    const [categories, setCategories] = useState(['frontend']);\n\n    return (\n        <>\n            <h2>GifExpertApp</h2>\n\n         \n        \n\n            <AddCategory setCategories={ setCategories } />\n                <hr />\n\n                <ol>\n                   {\n            categories.map( category  => (\n                <GifGrid \n                    key={ category }\n                    category={ category }\n                />\n             ))\n                    }\n                </ol>\n           \n\n                \n            \n\n\n         \n\n        </>\n    )\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport { GifExpertApp } from './GifExpertApp';\n\nimport './index.css';\n\nReactDOM.render(\n  \n  <GifExpertApp />,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}